{"remainingRequest":"C:\\Users\\Hendrick\\Desktop\\PayMyBuddyVueJS\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Hendrick\\Desktop\\PayMyBuddyVueJS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hendrick\\Desktop\\PayMyBuddyVueJS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hendrick\\Desktop\\PayMyBuddyVueJS\\src\\views\\Loginpage.vue?vue&type=template&id=4479c0ae&","dependencies":[{"path":"C:\\Users\\Hendrick\\Desktop\\PayMyBuddyVueJS\\src\\views\\Loginpage.vue","mtime":1639827095517},{"path":"C:\\Users\\Hendrick\\Desktop\\PayMyBuddyVueJS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633150622442},{"path":"C:\\Users\\Hendrick\\Desktop\\PayMyBuddyVueJS\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1633150633966},{"path":"C:\\Users\\Hendrick\\Desktop\\PayMyBuddyVueJS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633150622442},{"path":"C:\\Users\\Hendrick\\Desktop\\PayMyBuddyVueJS\\node_modules\\vue-loader\\lib\\index.js","mtime":1633150633966}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-card\",\n    { staticClass: \"mx-auto overflow-hidden\", attrs: { height: \"600\" } },\n    [\n      _c(\n        \"v-app-bar\",\n        { attrs: { color: \"blue\", dark: \"\" } },\n        [\n          _c(\"v-app-bar-nav-icon\", {\n            on: {\n              click: function($event) {\n                _vm.drawer = true\n              }\n            }\n          }),\n          _c(\"v-toolbar-title\", [_vm._v(\"Pay My Buddy\")])\n        ],\n        1\n      ),\n      _c(\n        \"v-navigation-drawer\",\n        {\n          attrs: { absolute: \"\", temporary: \"\" },\n          model: {\n            value: _vm.drawer,\n            callback: function($$v) {\n              _vm.drawer = $$v\n            },\n            expression: \"drawer\"\n          }\n        },\n        [\n          _c(\n            \"v-list\",\n            { attrs: { nav: \"\", dense: \"\" } },\n            [\n              _c(\n                \"v-list-item-group\",\n                {\n                  attrs: { \"active-class\": \"deep-purple--text text--accent-4\" },\n                  model: {\n                    value: _vm.group,\n                    callback: function($$v) {\n                      _vm.group = $$v\n                    },\n                    expression: \"group\"\n                  }\n                },\n                [\n                  _c(\n                    \"v-list-item\",\n                    [\n                      _c(\n                        \"v-list-item-icon\",\n                        [_c(\"v-icon\", [_vm._v(\"mdi-home\")])],\n                        1\n                      ),\n                      _c(\n                        \"v-list-item-title\",\n                        [\n                          _c(\n                            \"v-btn\",\n                            {\n                              attrs: { color: \"primary\" },\n                              on: { click: _vm.goHomepage }\n                            },\n                            [_vm._v(\"Home\")]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-list-item\",\n                    [\n                      _c(\n                        \"v-list-item-icon\",\n                        [_c(\"v-icon\", [_vm._v(\"mdi-account\")])],\n                        1\n                      ),\n                      _c(\n                        \"v-list-item-title\",\n                        [\n                          _c(\n                            \"v-btn\",\n                            {\n                              attrs: { color: \"primary\" },\n                              on: { click: _vm.goAccountpage }\n                            },\n                            [_vm._v(\"Account\")]\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-container\",\n        { attrs: { fluid: \"\" } },\n        [\n          _c(\n            \"v-row\",\n            { attrs: { justify: \"space-around\" } },\n            [\n              _c(\n                \"v-card\",\n                {\n                  staticClass: \"mx-auto my-12\",\n                  attrs: {\n                    elevation: \"4\",\n                    loading: _vm.loading,\n                    \"max-width\": \"374\"\n                  }\n                },\n                [\n                  _c(\n                    \"v-tabs\",\n                    {\n                      attrs: {\n                        \"background-color\": \"deep-purple accent-4\",\n                        centered: \"\",\n                        dark: \"\",\n                        \"icons-and-text\": \"\"\n                      },\n                      model: {\n                        value: _vm.tab,\n                        callback: function($$v) {\n                          _vm.tab = $$v\n                        },\n                        expression: \"tab\"\n                      }\n                    },\n                    [\n                      _c(\"v-tabs-slider\"),\n                      _c(\n                        \"v-card-title\",\n                        [\n                          _c(\n                            \"v-tab\",\n                            { attrs: { href: \"#tab-1\" } },\n                            [\n                              _vm._v(\"\\n            Sign In\\n            \"),\n                              _c(\"v-icon\", [_vm._v(\"mdi-phone\")])\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"v-tab\",\n                            { attrs: { href: \"#tab-2\" } },\n                            [\n                              _vm._v(\"\\n            Sign Up\\n            \"),\n                              _c(\"v-icon\", [_vm._v(\"mdi-heart\")])\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\"v-card-text\", [\n                    _c(\n                      \"form\",\n                      [\n                        _c(\"v-text-field\", {\n                          attrs: {\n                            \"error-messages\": _vm.nameErrors,\n                            counter: 10,\n                            label: \"Name\",\n                            required: \"\"\n                          },\n                          on: {\n                            input: function($event) {\n                              return _vm.$v.name.$touch()\n                            },\n                            blur: function($event) {\n                              return _vm.$v.name.$touch()\n                            }\n                          },\n                          model: {\n                            value: _vm.name,\n                            callback: function($$v) {\n                              _vm.name = $$v\n                            },\n                            expression: \"name\"\n                          }\n                        }),\n                        _c(\"v-text-field\", {\n                          attrs: {\n                            \"error-messages\": _vm.emailErrors,\n                            label: \"E-mail\",\n                            required: \"\"\n                          },\n                          on: {\n                            input: function($event) {\n                              return _vm.$v.email.$touch()\n                            },\n                            blur: function($event) {\n                              return _vm.$v.email.$touch()\n                            }\n                          },\n                          model: {\n                            value: _vm.email,\n                            callback: function($$v) {\n                              _vm.email = $$v\n                            },\n                            expression: \"email\"\n                          }\n                        }),\n                        _c(\n                          \"v-text-field\",\n                          {\n                            attrs: {\n                              \"append-icon\": _vm.show1\n                                ? \"mdi-eye\"\n                                : \"mdi-eye-off\",\n                              rules: [_vm.rules.required, _vm.rules.min],\n                              type: _vm.show1 ? \"text\" : \"password\",\n                              name: \"input-10-1\",\n                              label: \"Password\",\n                              hint: \"At least 8 characters\",\n                              counter: \"\"\n                            },\n                            on: {\n                              \"click:append\": function($event) {\n                                _vm.show1 = !_vm.show1\n                              }\n                            },\n                            model: {\n                              value: _vm.password,\n                              callback: function($$v) {\n                                _vm.password = $$v\n                              },\n                              expression: \"password\"\n                            }\n                          },\n                          [_vm._v(\"\\n            >\")]\n                        ),\n                        _c(\"v-checkbox\", {\n                          attrs: {\n                            \"error-messages\": _vm.checkboxErrors,\n                            label: \"Remember me\",\n                            required: \"\"\n                          },\n                          on: {\n                            change: function($event) {\n                              return _vm.$v.checkbox.$touch()\n                            },\n                            blur: function($event) {\n                              return _vm.$v.checkbox.$touch()\n                            }\n                          },\n                          model: {\n                            value: _vm.checkbox,\n                            callback: function($$v) {\n                              _vm.checkbox = $$v\n                            },\n                            expression: \"checkbox\"\n                          }\n                        }),\n                        _c(\n                          \"v-btn\",\n                          { staticClass: \"mr-4\", on: { click: _vm.submit } },\n                          [_vm._v(\" connection \")]\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}